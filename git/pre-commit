#!/bin/sh
#
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

PROJECT_DIR=$(pwd)
SERVER_DIR=$PROJECT_DIR/server
CLIENT_DIR=$PROJECT_DIR/client

$PROJECT_DIR/add-licence-headers.sh

# Test the server side
npm run pre-commit --prefix $SERVER_DIR

# Test the client side
#npm run test-no-browser --prefix $PROJECT_DIR/client

# Lint client
ESLINT_CLIENT_EXIT=0
STAGED_FILES_CLIENT=($(git diff --diff-filter=d --cached --name-only ./client | grep -E '^.*src\/.*\.(js|jsx|tsx|ts)$'))

if [[ ${#STAGED_FILES_CLIENT[@]} > 0 ]]; then
  LINT_PATHS=()

  # Remove 'client/' from all paths
  # eslint will be running from within client/
  for i in "${!STAGED_FILES_CLIENT[@]}"
  do
    DATA=${STAGED_FILES_CLIENT[$i]}
    pattern="client/"
    DATA=${DATA/$pattern/}
    LINT_PATHS[$i]=$DATA
  done

  # Actually lint
  npm run lint --prefix ./client -- "${LINT_PATHS[@]}" --fix

  # Store exit code
  ESLINT_CLIENT_EXIT="$?"

  # Re-add files since they may have been fixed
  git add "${STAGED_FILES_CLIENT[@]}"
fi

# Check if everything went well
if [[ "${ESLINT_CLIENT_EXIT}" == 0 ]]; then
  printf "\n\e[30m\e[42mPRE-COMMIT CHECKS PASSED\e[0m\n"
else
  printf "\n\e[41mPRE-COMMIT CHECKS FAILED\e[0m\n"
  exit 1
fi